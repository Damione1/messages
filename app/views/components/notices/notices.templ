package component_notice

import (
    "fmt"
)

type NoticeProps struct {
    Title   string
    Content string
    Type    int
}


const (
	NoticeTypeEnum_Info = iota
	NoticeTypeEnum_Warning
	NoticeTypeEnum_Danger
)

templ Notice(props *NoticeProps) {
    <div id="notices" hx-swap-oob="true" class="fixed bottom-0 inset-x-0 z-50 p-4">
        if props.Content != "" {
            <div class={fmt.Sprintf("max-w-4xl mx-auto p-4 rounded-t shadow-md %s", getNoticeStyle(props.Type))} role="alert">
                <div class="flex">
                    <div class="py-1">
                        <svg class={"fill-current h-6 w-6 mr-4 " + getNoticeIconColor(props.Type)} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                            <path d="M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z"/>
                        </svg>
                    </div>
                    <div>
                        <p class="font-bold">{props.Title}</p>
                        <p class="text-sm">{props.Content}</p>
                    </div>
                </div>
            </div>
        }
    </div>
}

func getNoticeStyle(noticeType int) string {
    switch noticeType {
        case NoticeTypeEnum_Info:
            return "bg-teal-100 border-t-4 border-teal-500 text-teal-900 px-4 py-3"
        case NoticeTypeEnum_Warning:
            return "bg-yellow-100 border-t-4 border-yellow-500 text-yellow-900 px-4 py-3"
        case NoticeTypeEnum_Danger:
            return "bg-red-100 border-t-4 border-red-500 text-red-900 px-4 py-3"
        default:
            return ""
    }
}

func getNoticeIconColor(noticeType int) string {
    switch noticeType {
        case NoticeTypeEnum_Info:
            return "text-teal-500"
        case NoticeTypeEnum_Warning:
            return "text-yellow-500"
        case NoticeTypeEnum_Danger:
            return "text-red-500"
        default:
            return ""
    }
}
